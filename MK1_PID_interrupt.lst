0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1034 (Dec 12 2012) (MSVC)
0000              4   ; This file was generated Fri Apr 03 14:06:33 2015
0000              5   ;--------------------------------------------------------
                  5   $name MK1_PID_interrupt
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _main
0000             27            public _it_timer2
0000             28            public __c51_external_startup
0000             29            public _temp_pwm
0000             30            public _pwm_temp
0000             31            public _dErr
0000             32            public _errSum
0000             33            public _past5
0000             34            public _prevError
0000             35            public _error
0000             36            public _linSetPoint
0000             37            public _angSetPoint
0000             38            public _linposition
0000             39            public _position
0000             40            public _resetHCTL
0000             41            public _PIDcalculation
0000             42            public _fivePointMovingAvg
0000             43            public _decode
0000             44            public _readBits
0000             45            public _waitms
0000             46            public _SPIWrite
0000             47            public _GetADC
0000             48   ;--------------------------------------------------------
0000             49   ; Special Function Registers
0000             50   ;--------------------------------------------------------
0000             51   _ACC            DATA 0xe0
0000             52   _B              DATA 0xf0
0000             53   _PSW            DATA 0xd0
0000             54   _SP             DATA 0x81
0000             55   _SPX            DATA 0xef
0000             56   _DPL            DATA 0x82
0000             57   _DPH            DATA 0x83
0000             58   _DPLB           DATA 0xd4
0000             59   _DPHB           DATA 0xd5
0000             60   _PAGE           DATA 0xf6
0000             61   _AX             DATA 0xe1
0000             62   _BX             DATA 0xf7
0000             63   _DSPR           DATA 0xe2
0000             64   _FIRD           DATA 0xe3
0000             65   _MACL           DATA 0xe4
0000             66   _MACH           DATA 0xe5
0000             67   _PCON           DATA 0x87
0000             68   _AUXR           DATA 0x8e
0000             69   _AUXR1          DATA 0xa2
0000             70   _DPCF           DATA 0xa1
0000             71   _CKRL           DATA 0x97
0000             72   _CKCKON0        DATA 0x8f
0000             73   _CKCKON1        DATA 0xaf
0000             74   _CKSEL          DATA 0x85
0000             75   _CLKREG         DATA 0xae
0000             76   _OSCCON         DATA 0x85
0000             77   _IE             DATA 0xa8
0000             78   _IEN0           DATA 0xa8
0000             79   _IEN1           DATA 0xb1
0000             80   _IPH0           DATA 0xb7
0000             81   _IP             DATA 0xb8
0000             82   _IPL0           DATA 0xb8
0000             83   _IPH1           DATA 0xb3
0000             84   _IPL1           DATA 0xb2
0000             85   _P0             DATA 0x80
0000             86   _P1             DATA 0x90
0000             87   _P2             DATA 0xa0
0000             88   _P3             DATA 0xb0
0000             89   _P4             DATA 0xc0
0000             90   _P0M0           DATA 0xe6
0000             91   _P0M1           DATA 0xe7
0000             92   _P1M0           DATA 0xd6
0000             93   _P1M1           DATA 0xd7
0000             94   _P2M0           DATA 0xce
0000             95   _P2M1           DATA 0xcf
0000             96   _P3M0           DATA 0xc6
0000             97   _P3M1           DATA 0xc7
0000             98   _P4M0           DATA 0xbe
0000             99   _P4M1           DATA 0xbf
0000            100   _SCON           DATA 0x98
0000            101   _SBUF           DATA 0x99
0000            102   _SADEN          DATA 0xb9
0000            103   _SADDR          DATA 0xa9
0000            104   _BDRCON         DATA 0x9b
0000            105   _BRL            DATA 0x9a
0000            106   _TCON           DATA 0x88
0000            107   _TMOD           DATA 0x89
0000            108   _TCONB          DATA 0x91
0000            109   _TL0            DATA 0x8a
0000            110   _TH0            DATA 0x8c
0000            111   _TL1            DATA 0x8b
0000            112   _TH1            DATA 0x8d
0000            113   _RL0            DATA 0xf2
0000            114   _RH0            DATA 0xf4
0000            115   _RL1            DATA 0xf3
0000            116   _RH1            DATA 0xf5
0000            117   _WDTRST         DATA 0xa6
0000            118   _WDTPRG         DATA 0xa7
0000            119   _T2CON          DATA 0xc8
0000            120   _T2MOD          DATA 0xc9
0000            121   _RCAP2H         DATA 0xcb
0000            122   _RCAP2L         DATA 0xca
0000            123   _TH2            DATA 0xcd
0000            124   _TL2            DATA 0xcc
0000            125   _SPCON          DATA 0xc3
0000            126   _SPSTA          DATA 0xc4
0000            127   _SPDAT          DATA 0xc5
0000            128   _SSCON          DATA 0x93
0000            129   _SSCS           DATA 0x94
0000            130   _SSDAT          DATA 0x95
0000            131   _SSADR          DATA 0x96
0000            132   _KBLS           DATA 0x9c
0000            133   _KBE            DATA 0x9d
0000            134   _KBF            DATA 0x9e
0000            135   _KBMOD          DATA 0x9f
0000            136   _BMSEL          DATA 0x92
0000            137   _FCON           DATA 0xd2
0000            138   _EECON          DATA 0xd2
0000            139   _ACSRA          DATA 0xa3
0000            140   _ACSRB          DATA 0xab
0000            141   _AREF           DATA 0xbd
0000            142   _DADC           DATA 0xa4
0000            143   _DADI           DATA 0xa5
0000            144   _DADL           DATA 0xac
0000            145   _DADH           DATA 0xad
0000            146   _CCON           DATA 0xd8
0000            147   _CMOD           DATA 0xd9
0000            148   _CL             DATA 0xe9
0000            149   _CH             DATA 0xf9
0000            150   _CCAPM0         DATA 0xda
0000            151   _CCAPM1         DATA 0xdb
0000            152   _CCAPM2         DATA 0xdc
0000            153   _CCAPM3         DATA 0xdd
0000            154   _CCAPM4         DATA 0xde
0000            155   _CCAP0H         DATA 0xfa
0000            156   _CCAP1H         DATA 0xfb
0000            157   _CCAP2H         DATA 0xfc
0000            158   _CCAP3H         DATA 0xfd
0000            159   _CCAP4H         DATA 0xfe
0000            160   _CCAP0L         DATA 0xea
0000            161   _CCAP1L         DATA 0xeb
0000            162   _CCAP2L         DATA 0xec
0000            163   _CCAP3L         DATA 0xed
0000            164   _CCAP4L         DATA 0xee
0000            165   ;--------------------------------------------------------
0000            166   ; special function bits
0000            167   ;--------------------------------------------------------
0000            168   _ACC_0          BIT 0xe0
0000            169   _ACC_1          BIT 0xe1
0000            170   _ACC_2          BIT 0xe2
0000            171   _ACC_3          BIT 0xe3
0000            172   _ACC_4          BIT 0xe4
0000            173   _ACC_5          BIT 0xe5
0000            174   _ACC_6          BIT 0xe6
0000            175   _ACC_7          BIT 0xe7
0000            176   _B_0            BIT 0xf0
0000            177   _B_1            BIT 0xf1
0000            178   _B_2            BIT 0xf2
0000            179   _B_3            BIT 0xf3
0000            180   _B_4            BIT 0xf4
0000            181   _B_5            BIT 0xf5
0000            182   _B_6            BIT 0xf6
0000            183   _B_7            BIT 0xf7
0000            184   _P              BIT 0xd0
0000            185   _F1             BIT 0xd1
0000            186   _OV             BIT 0xd2
0000            187   _RS0            BIT 0xd3
0000            188   _RS1            BIT 0xd4
0000            189   _F0             BIT 0xd5
0000            190   _AC             BIT 0xd6
0000            191   _CY             BIT 0xd7
0000            192   _EX0            BIT 0xa8
0000            193   _ET0            BIT 0xa9
0000            194   _EX1            BIT 0xaa
0000            195   _ET1            BIT 0xab
0000            196   _ES             BIT 0xac
0000            197   _ET2            BIT 0xad
0000            198   _EC             BIT 0xae
0000            199   _EA             BIT 0xaf
0000            200   _PX0            BIT 0xb8
0000            201   _PT0            BIT 0xb9
0000            202   _PX1            BIT 0xba
0000            203   _PT1            BIT 0xbb
0000            204   _PS             BIT 0xbc
0000            205   _PT2            BIT 0xbd
0000            206   _IP0D           BIT 0xbf
0000            207   _PPCL           BIT 0xbe
0000            208   _PT2L           BIT 0xbd
0000            209   _PLS            BIT 0xbc
0000            210   _PT1L           BIT 0xbb
0000            211   _PX1L           BIT 0xba
0000            212   _PT0L           BIT 0xb9
0000            213   _PX0L           BIT 0xb8
0000            214   _P0_0           BIT 0x80
0000            215   _P0_1           BIT 0x81
0000            216   _P0_2           BIT 0x82
0000            217   _P0_3           BIT 0x83
0000            218   _P0_4           BIT 0x84
0000            219   _P0_5           BIT 0x85
0000            220   _P0_6           BIT 0x86
0000            221   _P0_7           BIT 0x87
0000            222   _P1_0           BIT 0x90
0000            223   _P1_1           BIT 0x91
0000            224   _P1_2           BIT 0x92
0000            225   _P1_3           BIT 0x93
0000            226   _P1_4           BIT 0x94
0000            227   _P1_5           BIT 0x95
0000            228   _P1_6           BIT 0x96
0000            229   _P1_7           BIT 0x97
0000            230   _P2_0           BIT 0xa0
0000            231   _P2_1           BIT 0xa1
0000            232   _P2_2           BIT 0xa2
0000            233   _P2_3           BIT 0xa3
0000            234   _P2_4           BIT 0xa4
0000            235   _P2_5           BIT 0xa5
0000            236   _P2_6           BIT 0xa6
0000            237   _P2_7           BIT 0xa7
0000            238   _P3_0           BIT 0xb0
0000            239   _P3_1           BIT 0xb1
0000            240   _P3_2           BIT 0xb2
0000            241   _P3_3           BIT 0xb3
0000            242   _P3_4           BIT 0xb4
0000            243   _P3_5           BIT 0xb5
0000            244   _P3_6           BIT 0xb6
0000            245   _P3_7           BIT 0xb7
0000            246   _RXD            BIT 0xb0
0000            247   _TXD            BIT 0xb1
0000            248   _INT0           BIT 0xb2
0000            249   _INT1           BIT 0xb3
0000            250   _T0             BIT 0xb4
0000            251   _T1             BIT 0xb5
0000            252   _WR             BIT 0xb6
0000            253   _RD             BIT 0xb7
0000            254   _P4_0           BIT 0xc0
0000            255   _P4_1           BIT 0xc1
0000            256   _P4_2           BIT 0xc2
0000            257   _P4_3           BIT 0xc3
0000            258   _P4_4           BIT 0xc4
0000            259   _P4_5           BIT 0xc5
0000            260   _P4_6           BIT 0xc6
0000            261   _P4_7           BIT 0xc7
0000            262   _RI             BIT 0x98
0000            263   _TI             BIT 0x99
0000            264   _RB8            BIT 0x9a
0000            265   _TB8            BIT 0x9b
0000            266   _REN            BIT 0x9c
0000            267   _SM2            BIT 0x9d
0000            268   _SM1            BIT 0x9e
0000            269   _SM0            BIT 0x9f
0000            270   _IT0            BIT 0x88
0000            271   _IE0            BIT 0x89
0000            272   _IT1            BIT 0x8a
0000            273   _IE1            BIT 0x8b
0000            274   _TR0            BIT 0x8c
0000            275   _TF0            BIT 0x8d
0000            276   _TR1            BIT 0x8e
0000            277   _TF1            BIT 0x8f
0000            278   _CP_RL2         BIT 0xc8
0000            279   _C_T2           BIT 0xc9
0000            280   _TR2            BIT 0xca
0000            281   _EXEN2          BIT 0xcb
0000            282   _TCLK           BIT 0xcc
0000            283   _RCLK           BIT 0xcd
0000            284   _EXF2           BIT 0xce
0000            285   _TF2            BIT 0xcf
0000            286   _CF             BIT 0xdf
0000            287   _CR             BIT 0xde
0000            288   _CCF4           BIT 0xdc
0000            289   _CCF3           BIT 0xdb
0000            290   _CCF2           BIT 0xda
0000            291   _CCF1           BIT 0xd9
0000            292   _CCF0           BIT 0xd8
0000            293   ;--------------------------------------------------------
0000            294   ; overlayable register banks
0000            295   ;--------------------------------------------------------
0000            296            rbank0 segment data overlay
0000            297   ;--------------------------------------------------------
0000            298   ; overlayable bit register bank
0000            299   ;--------------------------------------------------------
0000            300            rseg BIT_BANK
0000            301   bits:
0000            302            ds 1
0001            303            b0 equ  bits.0 
0001            304            b1 equ  bits.1 
0001            305            b2 equ  bits.2 
0001            306            b3 equ  bits.3 
0001            307            b4 equ  bits.4 
0001            308            b5 equ  bits.5 
0001            309            b6 equ  bits.6 
0001            310            b7 equ  bits.7 
0001            311   ;--------------------------------------------------------
0001            312   ; internal ram data
0001            313   ;--------------------------------------------------------
0000            314            rseg R_DSEG
0000            315   _position:
0000            316            ds 2
0002            317   _linposition:
0002            318            ds 2
0004            319   _angSetPoint:
0004            320            ds 2
0006            321   _linSetPoint:
0006            322            ds 2
0008            323   _error:
0008            324            ds 2
000A            325   _prevError:
000A            326            ds 2
000C            327   _past5:
000C            328            ds 10
0016            329   _errSum:
0016            330            ds 2
0018            331   _dErr:
0018            332            ds 2
001A            333   _pwm_temp:
001A            334            ds 2
001C            335   _temp_pwm:
001C            336            ds 2
001E            337   _PIDcalculation_error_1_83:
001E            338            ds 2
0020            339   _PIDcalculation_sloc0_1_0:
0020            340            ds 4
0024            341   _fivePointMovingAvg_prevError_1_85:
0024            342            ds 2
0026            343   ;--------------------------------------------------------
0026            344   ; overlayable items in internal ram 
0026            345   ;--------------------------------------------------------
0000            346            rseg    R_OSEG
0000            347            rseg    R_OSEG
0000            348            rseg    R_OSEG
0000            349   ;--------------------------------------------------------
0000            350   ; indirectly addressable internal ram data
0000            351   ;--------------------------------------------------------
0000            352            rseg R_ISEG
0000            353   ;--------------------------------------------------------
0000            354   ; absolute internal ram data
0000            355   ;--------------------------------------------------------
0000            356            DSEG
0000            357   ;--------------------------------------------------------
0000            358   ; bit data
0000            359   ;--------------------------------------------------------
0000            360            rseg R_BSEG
0000            361   ;--------------------------------------------------------
0000            362   ; paged external ram data
0000            363   ;--------------------------------------------------------
0000            364            rseg R_PSEG
0000            365   ;--------------------------------------------------------
0000            366   ; external ram data
0000            367   ;--------------------------------------------------------
0000            368            rseg R_XSEG
0000            369   ;--------------------------------------------------------
0000            370   ; absolute external ram data
0000            371   ;--------------------------------------------------------
0000            372            XSEG
0000            373   ;--------------------------------------------------------
0000            374   ; external initialized ram data
0000            375   ;--------------------------------------------------------
0000            376            rseg R_IXSEG
0000            377            rseg R_HOME
0000            378            rseg R_GSINIT
0000            379            rseg R_CSEG
0000            380   ;--------------------------------------------------------
0000            381   ; Reset entry point and interrupt vectors
0000            382   ;--------------------------------------------------------
0000            383            CSEG at 0x0000
0000 020100     384            ljmp    _crt0
002B            385            CSEG at 0x002b
002B 020100     386            ljmp    _it_timer2
002E            387   ;--------------------------------------------------------
002E            388   ; global & static initialisations
002E            389   ;--------------------------------------------------------
0000            390            rseg R_HOME
0000            391            rseg R_GSINIT
0000            392            rseg R_GSINIT
0000            393   ;--------------------------------------------------------
0000            394   ; data variables initialization
0000            395   ;--------------------------------------------------------
0000            396            rseg R_DINIT
0000            397   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:66: volatile int position = 1111;
0000 755857     398            mov     _position,#0x57
0003 755904     399            mov     (_position + 1),#0x04
0006            400   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:67: volatile int linposition = 2222;
0006 7518AE     401            mov     _linposition,#0xAE
0009 751908     402            mov     (_linposition + 1),#0x08
000C            403   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:68: volatile int angSetPoint = 808;
000C 75D828     404            mov     _angSetPoint,#0x28
000F 75D903     405            mov     (_angSetPoint + 1),#0x03
0012            406   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:69: volatile int linSetPoint = 909;
0012 75988D     407            mov     _linSetPoint,#0x8D
0015 759903     408            mov     (_linSetPoint + 1),#0x03
0018            409   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:70: volatile int error = 0;
0018 E4         410            clr     a
0019 F558       411            mov     _error,a
001B F559       412            mov     (_error + 1),a
001D            413   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:71: volatile int prevError = 0;
001D E4         414            clr     a
001E F518       415            mov     _prevError,a
0020 F519       416            mov     (_prevError + 1),a
0022            417   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:73: volatile int errSum = 0;
0022 E4         418            clr     a
0023 F598       419            mov     _errSum,a
0025 F599       420            mov     (_errSum + 1),a
0027            421   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:74: volatile int dErr = 0;
0027 E4         422            clr     a
0028 F558       423            mov     _dErr,a
002A F559       424            mov     (_dErr + 1),a
002C            425   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:75: volatile int pwm_temp = 0;
002C E4         426            clr     a
002D F518       427            mov     _pwm_temp,a
002F F519       428            mov     (_pwm_temp + 1),a
0031            429   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:76: volatile int temp_pwm = 0;
0031 E4         430            clr     a
0032 F5D8       431            mov     _temp_pwm,a
0034 F5D9       432            mov     (_temp_pwm + 1),a
0036            433            ; The linker places a 'ret' at the end of segment R_DINIT.
0036            434   ;--------------------------------------------------------
0036            435   ; code
0036            436   ;--------------------------------------------------------
0000            437            rseg R_CSEG
0000            438   ;------------------------------------------------------------
0000            439   ;Allocation info for local variables in function '_c51_external_startup'
0000            440   ;------------------------------------------------------------
0000            441   ;------------------------------------------------------------
0000            442   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:78: unsigned char _c51_external_startup(void)
0000            443   ;        -----------------------------------------
0000            444   ;         function _c51_external_startup
0000            445   ;        -----------------------------------------
0000            446   __c51_external_startup:
0000            447            using   0
0000            448   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:81: P0M0=0;       P0M1=0;
0000 75E600     449            mov     _P0M0,#0x00
0003 75E700     450            mov     _P0M1,#0x00
0006            451   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:82: P1M0=0;       P1M1=0;
0006 75D600     452            mov     _P1M0,#0x00
0009 75D700     453            mov     _P1M1,#0x00
000C            454   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:83: P2M0=0;       P2M1=0;
000C 75CE00     455            mov     _P2M0,#0x00
000F 75CF00     456            mov     _P2M1,#0x00
0012            457   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:84: P3M0=0;       P3M1=0;
0012 75C600     458            mov     _P3M0,#0x00
0015 75C700     459            mov     _P3M1,#0x00
0018            460   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:85: AUXR=0B_0001_0001; // 1152 bytes of internal XDATA, P4.4 is a general purpose I/O
0018 758E11     461            mov     _AUXR,#0x11
001B            462   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:86: P4M0=0;       P4M1=0;
001B 75BE00     463            mov     _P4M0,#0x00
001E 75BF00     464            mov     _P4M1,#0x00
0021            465   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:89: PCON|=0x80;
0021 438780     466            orl     _PCON,#0x80
0024            467   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:90: SCON = 0x52;
0024 759852     468            mov     _SCON,#0x52
0027            469   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:91: BDRCON=0;
0027 759B00     470            mov     _BDRCON,#0x00
002A            471   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:92: BRL=BRG_VAL;
002A 759AFA     472            mov     _BRL,#0xFA
002D            473   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:93: BDRCON=BRR|TBCK|RBCK|SPD;
002D 759B1E     474            mov     _BDRCON,#0x1E
0030            475   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:96: TMOD=0B_0001_0001; // 0001 is 16-bit mode (Enhanced Timer 1, p77 in docs)
0030 758911     476            mov     _TMOD,#0x11
0033            477   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:98: TCONB=0B_11000000; //P3_5 PWM ENABLED 
0033 7591C0     478            mov     _TCONB,#0xC0
0036            479   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:101: TR0=0;
0036 C28C       480            clr     _TR0
0038            481   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:102: TR0=1;
0038 D28C       482            setb    _TR0
003A            483   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:103: TR1=1;
003A D28E       484            setb    _TR1
003C            485   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:105: RL1=250;
003C 75F3FA     486            mov     _RL1,#0xFA
003F            487   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:106: RL0=250; 
003F 75F2FA     488            mov     _RL0,#0xFA
0042            489   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:108: RH1=128; //Pin3.5
0042 75F580     490            mov     _RH1,#0x80
0045            491   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:109: RH0=128; //Pin3.4
0045 75F480     492            mov     _RH0,#0x80
0048            493   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:113: T2MOD &= 0xFC;                             /* T2OE=0;DCEN=1; */
0048 53C9FC     494            anl     _T2MOD,#0xFC
004B            495   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:114: T2MOD |= 0x01;                             
004B 43C901     496            orl     _T2MOD,#0x01
004E            497   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:116: EXF2=0;                    /* reset flag */
004E C2CE       498            clr     _EXF2
0050            499   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:117: TCLK=0;RCLK=0;             /* disable baud rate generator */
0050 C2CC       500            clr     _TCLK
0052 C2CD       501            clr     _RCLK
0054            502   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:118: EXEN2=0;                   /* ignore events on T2EX */ 
0054 C2CB       503            clr     _EXEN2
0056            504   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:119: TH2=MSB_reload_value;                /* Init msb_value */
0056 75CD11     505            mov     _TH2,#0x11
0059            506   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:120: TL2=LSB_reload_value;                /* Init lsb_value */
0059 75CCBB     507            mov     _TL2,#0xBB
005C            508   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:121: RCAP2H=MSB_reload_value;     /* reload msb_value */
005C 75CB11     509            mov     _RCAP2H,#0x11
005F            510   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:122: RCAP2L=LSB_reload_value;     /* reload lsb_value */
005F 75CABB     511            mov     _RCAP2L,#0xBB
0062            512   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:123: C_T2=0;                    /* timer mode */
0062 C2C9       513            clr     _C_T2
0064            514   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:124: CP_RL2=0;                  /* reload mode */
0064 C2C8       515            clr     _CP_RL2
0066            516   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:125: EA=1;                      /* interupt enable */
0066 D2AF       517            setb    _EA
0068            518   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:126: ET2=1;                     /* enable timer2 interrupt */
0068 D2AD       519            setb    _ET2
006A            520   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:127: TR2=1;                     /* timer2 run */
006A D2CA       521            setb    _TR2
006C            522   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:131: return 0;
006C 758200     523            mov     dpl,#0x00
006F 22         524            ret
0070            525   ;------------------------------------------------------------
0070            526   ;Allocation info for local variables in function 'it_timer2'
0070            527   ;------------------------------------------------------------
0070            528   ;------------------------------------------------------------
0070            529   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:139: void it_timer2(void) interrupt 5 /* interrupt address is 0x002b */
0070            530   ;        -----------------------------------------
0070            531   ;         function it_timer2
0070            532   ;        -----------------------------------------
0070            533   _it_timer2:
0070 C0A8       534            push    bits
0072 C0E0       535            push    acc
0074 C0F0       536            push    b
0076 C082       537            push    dpl
0078 C083       538            push    dph
007A C002       539            push    (0+2)
007C C003       540            push    (0+3)
007E C004       541            push    (0+4)
0080 C005       542            push    (0+5)
0082 C006       543            push    (0+6)
0084 C007       544            push    (0+7)
0086 C000       545            push    (0+0)
0088 C001       546            push    (0+1)
008A C0D0       547            push    psw
008C 75D000     548            mov     psw,#0x00
008F            549   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:141: position = decode(1);          //HCTL1 NEEDS CONVERSION---(Sensor Resolution*4/360)*(Gear Ratio)
008F 900001     550            mov     dptr,#0x0001
0092 120100     551            lcall   _decode
0095 858258     552            mov     _position,dpl
0098 858359     553            mov     (_position + 1),dph
009B            554   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:143: linposition = decode(2);       //HCTL2 (Sensor Resolution*4/360)*(360degrees/cm)*(Gear Ratio)   33.33;
009B 900002     555            mov     dptr,#0x0002
009E 120100     556            lcall   _decode
00A1 858218     557            mov     _linposition,dpl
00A4 858319     558            mov     (_linposition + 1),dph
00A7            559   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:145: angSetPoint = GetADC(1)/3.196;     //Angular Pot Reading in degrees TODO: Not reading for like 20 degrees around 0, measure actual angle to ensure precision.
00A7 758201     560            mov     dpl,#0x01
00AA 120100     561            lcall   _GetADC
00AD 120100     562            lcall   ___uint2fs
00B0 AA82       563            mov     r2,dpl
00B2 AB83       564            mov     r3,dph
00B4 ACF0       565            mov     r4,b
00B6 FD         566            mov     r5,a
00B7 7444       567            mov     a,#0x44
00B9 C0E0       568            push    acc
00BB 748B       569            mov     a,#0x8B
00BD C0E0       570            push    acc
00BF 744C       571            mov     a,#0x4C
00C1 C0E0       572            push    acc
00C3 7440       573            mov     a,#0x40
00C5 C0E0       574            push    acc
00C7 8A82       575            mov     dpl,r2
00C9 8B83       576            mov     dph,r3
00CB 8CF0       577            mov     b,r4
00CD ED         578            mov     a,r5
00CE 120100     579            lcall   ___fsdiv
00D1 AA82       580            mov     r2,dpl
00D3 AB83       581            mov     r3,dph
00D5 ACF0       582            mov     r4,b
00D7 FD         583            mov     r5,a
00D8 E581       584            mov     a,sp
00DA 24FC       585            add     a,#0xfc
00DC F581       586            mov     sp,a
00DE 8A82       587            mov     dpl,r2
00E0 8B83       588            mov     dph,r3
00E2 8CF0       589            mov     b,r4
00E4 ED         590            mov     a,r5
00E5 120100     591            lcall   ___fs2sint
00E8 8582D8     592            mov     _angSetPoint,dpl
00EB 8583D9     593            mov     (_angSetPoint + 1),dph
00EE            594   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:146: if(angSetPoint > 300)resetHCTL(2);
00EE C3         595            clr     c
00EF 742C       596            mov     a,#0x2C
00F1 95D8       597            subb    a,_angSetPoint
00F3 7481       598            mov     a,#(0x01 ^ 0x80)
00F5 85D9F0     599            mov     b,(_angSetPoint + 1)
00F8 63F080     600            xrl     b,#0x80
00FB 95F0       601            subb    a,b
00FD 5001       602            jnc     L003002?
00FF 900002     603            mov     dptr,#0x0002
0102 120100     604            lcall   _resetHCTL
0105            605   L003002?:
0105            606   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:148: linSetPoint = GetADC(0)/(9.3);  //Linear Pot Reading out of 100
0105 758200     607            mov     dpl,#0x00
0108 120100     608            lcall   _GetADC
010B 120100     609            lcall   ___uint2fs
010E AA82       610            mov     r2,dpl
0110 AB83       611            mov     r3,dph
0112 ACF0       612            mov     r4,b
0114 FD         613            mov     r5,a
0115 74CD       614            mov     a,#0xCD
0117 C0E0       615            push    acc
0119 74CC       616            mov     a,#0xCC
011B C0E0       617            push    acc
011D 7414       618            mov     a,#0x14
011F C0E0       619            push    acc
0121 7441       620            mov     a,#0x41
0123 C0E0       621            push    acc
0125 8A82       622            mov     dpl,r2
0127 8B83       623            mov     dph,r3
0129 8CF0       624            mov     b,r4
012B ED         625            mov     a,r5
012C 120100     626            lcall   ___fsdiv
012F AA82       627            mov     r2,dpl
0131 AB83       628            mov     r3,dph
0133 ACF0       629            mov     r4,b
0135 FD         630            mov     r5,a
0136 E581       631            mov     a,sp
0138 24FC       632            add     a,#0xfc
013A F581       633            mov     sp,a
013C 8A82       634            mov     dpl,r2
013E 8B83       635            mov     dph,r3
0140 8CF0       636            mov     b,r4
0142 ED         637            mov     a,r5
0143 120100     638            lcall   ___fs2sint
0146 858298     639            mov     _linSetPoint,dpl
0149 858399     640            mov     (_linSetPoint + 1),dph
014C            641   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:149: if(linSetPoint>80)resetHCTL(1);
014C C3         642            clr     c
014D 7450       643            mov     a,#0x50
014F 9598       644            subb    a,_linSetPoint
0151 E4         645            clr     a
0152 6480       646            xrl     a,#0x80
0154 8599F0     647            mov     b,(_linSetPoint + 1)
0157 63F080     648            xrl     b,#0x80
015A 95F0       649            subb    a,b
015C 5001       650            jnc     L003004?
015E 900001     651            mov     dptr,#0x0001
0161 120100     652            lcall   _resetHCTL
0164            653   L003004?:
0164            654   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:151: error = angSetPoint - position;
0164 E5D8       655            mov     a,_angSetPoint
0166 C3         656            clr     c
0167 9558       657            subb    a,_position
0169 F558       658            mov     _error,a
016B E5D9       659            mov     a,(_angSetPoint + 1)
016D 9559       660            subb    a,(_position + 1)
016F F559       661            mov     (_error + 1),a
0171            662   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:153: temp_pwm = PIDcalculation(error); //WILL CHANGE WITH dT
0171 855882     663            mov     dpl,_error
0174 855983     664            mov     dph,(_error + 1)
0177 120100     665            lcall   _PIDcalculation
017A 8582D8     666            mov     _temp_pwm,dpl
017D 8583D9     667            mov     (_temp_pwm + 1),dph
0180            668   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:155: RH0 = temp_pwm;
0180 85D8F4     669            mov     _RH0,_temp_pwm
0183 D0D0       670            pop     psw
0185 D001       671            pop     (0+1)
0187 D000       672            pop     (0+0)
0189 D007       673            pop     (0+7)
018B D006       674            pop     (0+6)
018D D005       675            pop     (0+5)
018F D004       676            pop     (0+4)
0191 D003       677            pop     (0+3)
0193 D002       678            pop     (0+2)
0195 D083       679            pop     dph
0197 D082       680            pop     dpl
0199 D0F0       681            pop     b
019B D0E0       682            pop     acc
019D D0A8       683            pop     bits
019F 32         684            reti
01A0            685   ;------------------------------------------------------------
01A0            686   ;Allocation info for local variables in function 'main'
01A0            687   ;------------------------------------------------------------
01A0            688   ;------------------------------------------------------------
01A0            689   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:162: void main (void)
01A0            690   ;        -----------------------------------------
01A0            691   ;         function main
01A0            692   ;        -----------------------------------------
01A0            693   _main:
01A0            694   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:164: resetHCTL(1);
01A0 900001     695            mov     dptr,#0x0001
01A3 120100     696            lcall   _resetHCTL
01A6            697   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:165: resetHCTL(2);
01A6 900002     698            mov     dptr,#0x0002
01A9 120100     699            lcall   _resetHCTL
01AC            700   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:168: printf( FORE_BACK, COLOR_BLACK, COLOR_WHITE );
01AC 7407       701            mov     a,#0x07
01AE C0E0       702            push    acc
01B0 E4         703            clr     a
01B1 C0E0       704            push    acc
01B3 E4         705            clr     a
01B4 C0E0       706            push    acc
01B6 C0E0       707            push    acc
01B8 74A8       708            mov     a,#__str_0
01BA C0E0       709            push    acc
01BC 7487       710            mov     a,#(__str_0 >> 8)
01BE C0E0       711            push    acc
01C0 7480       712            mov     a,#0x80
01C2 C0E0       713            push    acc
01C4 120100     714            lcall   _printf
01C7 E581       715            mov     a,sp
01C9 24F9       716            add     a,#0xf9
01CB F581       717            mov     sp,a
01CD            718   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:169: printf( CLEAR_SCREEN );
01CD 7428       719            mov     a,#__str_1
01CF C0E0       720            push    acc
01D1 7488       721            mov     a,#(__str_1 >> 8)
01D3 C0E0       722            push    acc
01D5 7480       723            mov     a,#0x80
01D7 C0E0       724            push    acc
01D9 120100     725            lcall   _printf
01DC 1581       726            dec     sp
01DE 1581       727            dec     sp
01E0 1581       728            dec     sp
01E2            729   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:170: printf( GOTO_YX, 1, 1 );
01E2 7401       730            mov     a,#0x01
01E4 C0E0       731            push    acc
01E6 E4         732            clr     a
01E7 C0E0       733            push    acc
01E9 7401       734            mov     a,#0x01
01EB C0E0       735            push    acc
01ED E4         736            clr     a
01EE C0E0       737            push    acc
01F0 7468       738            mov     a,#__str_2
01F2 C0E0       739            push    acc
01F4 7488       740            mov     a,#(__str_2 >> 8)
01F6 C0E0       741            push    acc
01F8 7480       742            mov     a,#0x80
01FA C0E0       743            push    acc
01FC 120100     744            lcall   _printf
01FF E581       745            mov     a,sp
0201 24F9       746            add     a,#0xf9
0203 F581       747            mov     sp,a
0205            748   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:171: printf("Motor Angle      :::");
0205 74A8       749            mov     a,#__str_3
0207 C0E0       750            push    acc
0209 7488       751            mov     a,#(__str_3 >> 8)
020B C0E0       752            push    acc
020D 7480       753            mov     a,#0x80
020F C0E0       754            push    acc
0211 120100     755            lcall   _printf
0214 1581       756            dec     sp
0216 1581       757            dec     sp
0218 1581       758            dec     sp
021A            759   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:172: printf("\nLin Motor Angle  :::");
021A 74E8       760            mov     a,#__str_4
021C C0E0       761            push    acc
021E 7488       762            mov     a,#(__str_4 >> 8)
0220 C0E0       763            push    acc
0222 7480       764            mov     a,#0x80
0224 C0E0       765            push    acc
0226 120100     766            lcall   _printf
0229 1581       767            dec     sp
022B 1581       768            dec     sp
022D 1581       769            dec     sp
022F            770   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:173: printf("\nSetpoint Angle   ::: ");
022F 7428       771            mov     a,#__str_5
0231 C0E0       772            push    acc
0233 7489       773            mov     a,#(__str_5 >> 8)
0235 C0E0       774            push    acc
0237 7480       775            mov     a,#0x80
0239 C0E0       776            push    acc
023B 120100     777            lcall   _printf
023E 1581       778            dec     sp
0240 1581       779            dec     sp
0242 1581       780            dec     sp
0244            781   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:174: printf("\nLinear Position  ::: ");
0244 7468       782            mov     a,#__str_6
0246 C0E0       783            push    acc
0248 7489       784            mov     a,#(__str_6 >> 8)
024A C0E0       785            push    acc
024C 7480       786            mov     a,#0x80
024E C0E0       787            push    acc
0250 120100     788            lcall   _printf
0253 1581       789            dec     sp
0255 1581       790            dec     sp
0257 1581       791            dec     sp
0259            792   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:176: while(1)
0259            793   L004002?:
0259            794   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:178: printf( GOTO_YX, 1, 22 );
0259 7416       795            mov     a,#0x16
025B C0E0       796            push    acc
025D E4         797            clr     a
025E C0E0       798            push    acc
0260 7401       799            mov     a,#0x01
0262 C0E0       800            push    acc
0264 E4         801            clr     a
0265 C0E0       802            push    acc
0267 7468       803            mov     a,#__str_2
0269 C0E0       804            push    acc
026B 7488       805            mov     a,#(__str_2 >> 8)
026D C0E0       806            push    acc
026F 7480       807            mov     a,#0x80
0271 C0E0       808            push    acc
0273 120100     809            lcall   _printf
0276 E581       810            mov     a,sp
0278 24F9       811            add     a,#0xf9
027A F581       812            mov     sp,a
027C            813   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:179: printf("%i     ", position);
027C C058       814            push    _position
027E C059       815            push    (_position + 1)
0280 74E8       816            mov     a,#__str_7
0282 C0E0       817            push    acc
0284 7489       818            mov     a,#(__str_7 >> 8)
0286 C0E0       819            push    acc
0288 7480       820            mov     a,#0x80
028A C0E0       821            push    acc
028C 120100     822            lcall   _printf
028F E581       823            mov     a,sp
0291 24FB       824            add     a,#0xfb
0293 F581       825            mov     sp,a
0295            826   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:181: printf( GOTO_YX, 2, 22 );
0295 7416       827            mov     a,#0x16
0297 C0E0       828            push    acc
0299 E4         829            clr     a
029A C0E0       830            push    acc
029C 7402       831            mov     a,#0x02
029E C0E0       832            push    acc
02A0 E4         833            clr     a
02A1 C0E0       834            push    acc
02A3 7468       835            mov     a,#__str_2
02A5 C0E0       836            push    acc
02A7 7488       837            mov     a,#(__str_2 >> 8)
02A9 C0E0       838            push    acc
02AB 7480       839            mov     a,#0x80
02AD C0E0       840            push    acc
02AF 120100     841            lcall   _printf
02B2 E581       842            mov     a,sp
02B4 24F9       843            add     a,#0xf9
02B6 F581       844            mov     sp,a
02B8            845   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:182: printf("%i     ", linposition);
02B8 C018       846            push    _linposition
02BA C019       847            push    (_linposition + 1)
02BC 74E8       848            mov     a,#__str_7
02BE C0E0       849            push    acc
02C0 7489       850            mov     a,#(__str_7 >> 8)
02C2 C0E0       851            push    acc
02C4 7480       852            mov     a,#0x80
02C6 C0E0       853            push    acc
02C8 120100     854            lcall   _printf
02CB E581       855            mov     a,sp
02CD 24FB       856            add     a,#0xfb
02CF F581       857            mov     sp,a
02D1            858   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:184: printf( GOTO_YX, 3, 22 );
02D1 7416       859            mov     a,#0x16
02D3 C0E0       860            push    acc
02D5 E4         861            clr     a
02D6 C0E0       862            push    acc
02D8 7403       863            mov     a,#0x03
02DA C0E0       864            push    acc
02DC E4         865            clr     a
02DD C0E0       866            push    acc
02DF 7468       867            mov     a,#__str_2
02E1 C0E0       868            push    acc
02E3 7488       869            mov     a,#(__str_2 >> 8)
02E5 C0E0       870            push    acc
02E7 7480       871            mov     a,#0x80
02E9 C0E0       872            push    acc
02EB 120100     873            lcall   _printf
02EE E581       874            mov     a,sp
02F0 24F9       875            add     a,#0xf9
02F2 F581       876            mov     sp,a
02F4            877   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:185: printf("%i    ", angSetPoint);
02F4 C0D8       878            push    _angSetPoint
02F6 C0D9       879            push    (_angSetPoint + 1)
02F8 7428       880            mov     a,#__str_8
02FA C0E0       881            push    acc
02FC 748A       882            mov     a,#(__str_8 >> 8)
02FE C0E0       883            push    acc
0300 7480       884            mov     a,#0x80
0302 C0E0       885            push    acc
0304 120100     886            lcall   _printf
0307 E581       887            mov     a,sp
0309 24FB       888            add     a,#0xfb
030B F581       889            mov     sp,a
030D            890   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:187: printf( GOTO_YX, 4, 22 );
030D 7416       891            mov     a,#0x16
030F C0E0       892            push    acc
0311 E4         893            clr     a
0312 C0E0       894            push    acc
0314 7404       895            mov     a,#0x04
0316 C0E0       896            push    acc
0318 E4         897            clr     a
0319 C0E0       898            push    acc
031B 7468       899            mov     a,#__str_2
031D C0E0       900            push    acc
031F 7488       901            mov     a,#(__str_2 >> 8)
0321 C0E0       902            push    acc
0323 7480       903            mov     a,#0x80
0325 C0E0       904            push    acc
0327 120100     905            lcall   _printf
032A E581       906            mov     a,sp
032C 24F9       907            add     a,#0xf9
032E F581       908            mov     sp,a
0330            909   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:188: printf("%i    ", linSetPoint);
0330 C098       910            push    _linSetPoint
0332 C099       911            push    (_linSetPoint + 1)
0334 7428       912            mov     a,#__str_8
0336 C0E0       913            push    acc
0338 748A       914            mov     a,#(__str_8 >> 8)
033A C0E0       915            push    acc
033C 7480       916            mov     a,#0x80
033E C0E0       917            push    acc
0340 120100     918            lcall   _printf
0343 E581       919            mov     a,sp
0345 24FB       920            add     a,#0xfb
0347 F581       921            mov     sp,a
0349            922   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:190: printf("\nPWM ::: %i    ", temp_pwm);
0349 C0D8       923            push    _temp_pwm
034B C0D9       924            push    (_temp_pwm + 1)
034D 7468       925            mov     a,#__str_9
034F C0E0       926            push    acc
0351 748A       927            mov     a,#(__str_9 >> 8)
0353 C0E0       928            push    acc
0355 7480       929            mov     a,#0x80
0357 C0E0       930            push    acc
0359 120100     931            lcall   _printf
035C E581       932            mov     a,sp
035E 24FB       933            add     a,#0xfb
0360 F581       934            mov     sp,a
0362 020100     935            ljmp    L004002?
0365            936   ;------------------------------------------------------------
0365            937   ;Allocation info for local variables in function 'resetHCTL'
0365            938   ;------------------------------------------------------------
0365            939   ;select                    Allocated to registers r2 r3 
0365            940   ;------------------------------------------------------------
0365            941   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:197: void resetHCTL (int select)
0365            942   ;        -----------------------------------------
0365            943   ;         function resetHCTL
0365            944   ;        -----------------------------------------
0365            945   _resetHCTL:
0365 AA82       946            mov     r2,dpl
0367 AB83       947            mov     r3,dph
0369            948   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:199: if(select == 1){
0369 BA01A8     949            cjne    r2,#0x01,L005004?
036C BB00A8     950            cjne    r3,#0x00,L005004?
036F            951   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:200: RST1 = 0; //Clear HCTL
036F C291       952            clr     _P1_1
0371            953   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:202: RST1 = 1;
0371 D291       954            setb    _P1_1
0373 22         955            ret
0374            956   L005004?:
0374            957   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:204: else if(select == 2){
0374 BA02E8     958            cjne    r2,#0x02,L005006?
0377 BB00E8     959            cjne    r3,#0x00,L005006?
037A            960   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:205: RST2 = 0;
037A C292       961            clr     _P1_2
037C            962   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:207: RST2 = 1;
037C D292       963            setb    _P1_2
037E            964   L005006?:
037E 22         965            ret
037F            966   ;------------------------------------------------------------
037F            967   ;Allocation info for local variables in function 'PIDcalculation'
037F            968   ;------------------------------------------------------------
037F            969   ;error                     Allocated with name '_PIDcalculation_error_1_83'
037F            970   ;output                    Allocated to registers r2 r3 
037F            971   ;sloc0                     Allocated with name '_PIDcalculation_sloc0_1_0'
037F            972   ;------------------------------------------------------------
037F            973   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:211: int PIDcalculation (int error){
037F            974   ;        -----------------------------------------
037F            975   ;         function PIDcalculation
037F            976   ;        -----------------------------------------
037F            977   _PIDcalculation:
037F 8582B8     978            mov     _PIDcalculation_error_1_83,dpl
0382 8583B9     979            mov     (_PIDcalculation_error_1_83 + 1),dph
0385            980   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:215: if(error<-1700)
0385 C3         981            clr     c
0386 E5B8       982            mov     a,_PIDcalculation_error_1_83
0388 945C       983            subb    a,#0x5C
038A E5B9       984            mov     a,(_PIDcalculation_error_1_83 + 1)
038C 6480       985            xrl     a,#0x80
038E 9479       986            subb    a,#0x79
0390 5001       987            jnc     L006002?
0392            988   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:216: error=50;
0392 75B832     989            mov     _PIDcalculation_error_1_83,#0x32
0395 E4         990            clr     a
0396 F5B9       991            mov     (_PIDcalculation_error_1_83 + 1),a
0398            992   L006002?:
0398            993   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:219: errSum += error * dT;
0398 85B882     994            mov     dpl,_PIDcalculation_error_1_83
039B 85B983     995            mov     dph,(_PIDcalculation_error_1_83 + 1)
039E 120100     996            lcall   ___sint2fs
03A1 AC82       997            mov     r4,dpl
03A3 AD83       998            mov     r5,dph
03A5 AEF0       999            mov     r6,b
03A7 FF        1000            mov     r7,a
03A8 C004      1001            push    ar4
03AA C005      1002            push    ar5
03AC C006      1003            push    ar6
03AE C007      1004            push    ar7
03B0 C004      1005            push    ar4
03B2 C005      1006            push    ar5
03B4 C006      1007            push    ar6
03B6 C007      1008            push    ar7
03B8 9073D4    1009            mov     dptr,#0x73D4
03BB 75F05A    1010            mov     b,#0x5A
03BE 743A      1011            mov     a,#0x3A
03C0 120100    1012            lcall   ___fsmul
03C3 858208    1013            mov     _PIDcalculation_sloc0_1_0,dpl
03C6 858309    1014            mov     (_PIDcalculation_sloc0_1_0 + 1),dph
03C9 85F00A    1015            mov     (_PIDcalculation_sloc0_1_0 + 2),b
03CC F50B      1016            mov     (_PIDcalculation_sloc0_1_0 + 3),a
03CE E581      1017            mov     a,sp
03D0 24FC      1018            add     a,#0xfc
03D2 F581      1019            mov     sp,a
03D4 859882    1020            mov     dpl,_errSum
03D7 859983    1021            mov     dph,(_errSum + 1)
03DA 120100    1022            lcall   ___sint2fs
03DD AA82      1023            mov     r2,dpl
03DF AB83      1024            mov     r3,dph
03E1 A8F0      1025            mov     r0,b
03E3 F9        1026            mov     r1,a
03E4 C008      1027            push    _PIDcalculation_sloc0_1_0
03E6 C009      1028            push    (_PIDcalculation_sloc0_1_0 + 1)
03E8 C00A      1029            push    (_PIDcalculation_sloc0_1_0 + 2)
03EA C00B      1030            push    (_PIDcalculation_sloc0_1_0 + 3)
03EC 8A82      1031            mov     dpl,r2
03EE 8B83      1032            mov     dph,r3
03F0 88F0      1033            mov     b,r0
03F2 E9        1034            mov     a,r1
03F3 120100    1035            lcall   ___fsadd
03F6 AA82      1036            mov     r2,dpl
03F8 AB83      1037            mov     r3,dph
03FA A8F0      1038            mov     r0,b
03FC F9        1039            mov     r1,a
03FD E581      1040            mov     a,sp
03FF 24FC      1041            add     a,#0xfc
0401 F581      1042            mov     sp,a
0403 8A82      1043            mov     dpl,r2
0405 8B83      1044            mov     dph,r3
0407 88F0      1045            mov     b,r0
0409 E9        1046            mov     a,r1
040A 120100    1047            lcall   ___fs2sint
040D 858298    1048            mov     _errSum,dpl
0410 858399    1049            mov     (_errSum + 1),dph
0413           1050   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:220: dErr = (error - fivePointMovingAvg(prevError)); //Dividing by dT makes this huge
0413 851882    1051            mov     dpl,_prevError
0416 851983    1052            mov     dph,(_prevError + 1)
0419 120100    1053            lcall   _fivePointMovingAvg
041C AA82      1054            mov     r2,dpl
041E AB83      1055            mov     r3,dph
0420 E5B8      1056            mov     a,_PIDcalculation_error_1_83
0422 C3        1057            clr     c
0423 9A        1058            subb    a,r2
0424 F558      1059            mov     _dErr,a
0426 E5B9      1060            mov     a,(_PIDcalculation_error_1_83 + 1)
0428 9B        1061            subb    a,r3
0429 F559      1062            mov     (_dErr + 1),a
042B           1063   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:223: output = kp * error + ki * errSum + kd * dErr;
042B 859882    1064            mov     dpl,_errSum
042E 859983    1065            mov     dph,(_errSum + 1)
0431 120100    1066            lcall   ___sint2fs
0434 AA82      1067            mov     r2,dpl
0436 AB83      1068            mov     r3,dph
0438 A8F0      1069            mov     r0,b
043A F9        1070            mov     r1,a
043B C002      1071            push    ar2
043D C003      1072            push    ar3
043F C000      1073            push    ar0
0441 C001      1074            push    ar1
0443 907CEE    1075            mov     dptr,#0x7CEE
0446 75F03F    1076            mov     b,#0x3F
0449 743E      1077            mov     a,#0x3E
044B 120100    1078            lcall   ___fsmul
044E AA82      1079            mov     r2,dpl
0450 AB83      1080            mov     r3,dph
0452 A8F0      1081            mov     r0,b
0454 F9        1082            mov     r1,a
0455 E581      1083            mov     a,sp
0457 24FC      1084            add     a,#0xfc
0459 F581      1085            mov     sp,a
045B D007      1086            pop     ar7
045D D006      1087            pop     ar6
045F D005      1088            pop     ar5
0461 D004      1089            pop     ar4
0463 C002      1090            push    ar2
0465 C003      1091            push    ar3
0467 C000      1092            push    ar0
0469 C001      1093            push    ar1
046B 8C82      1094            mov     dpl,r4
046D 8D83      1095            mov     dph,r5
046F 8EF0      1096            mov     b,r6
0471 EF        1097            mov     a,r7
0472 120100    1098            lcall   ___fsadd
0475 AA82      1099            mov     r2,dpl
0477 AB83      1100            mov     r3,dph
0479 ACF0      1101            mov     r4,b
047B FD        1102            mov     r5,a
047C E581      1103            mov     a,sp
047E 24FC      1104            add     a,#0xfc
0480 F581      1105            mov     sp,a
0482 855882    1106            mov     dpl,_dErr
0485 855983    1107            mov     dph,(_dErr + 1)
0488 C002      1108            push    ar2
048A C003      1109            push    ar3
048C C004      1110            push    ar4
048E C005      1111            push    ar5
0490 120100    1112            lcall   ___sint2fs
0493 AE82      1113            mov     r6,dpl
0495 AF83      1114            mov     r7,dph
0497 A8F0      1115            mov     r0,b
0499 F9        1116            mov     r1,a
049A C006      1117            push    ar6
049C C007      1118            push    ar7
049E C000      1119            push    ar0
04A0 C001      1120            push    ar1
04A2 904FDF    1121            mov     dptr,#0x4FDF
04A5 75F08D    1122            mov     b,#0x8D
04A8 743D      1123            mov     a,#0x3D
04AA 120100    1124            lcall   ___fsmul
04AD AE82      1125            mov     r6,dpl
04AF AF83      1126            mov     r7,dph
04B1 A8F0      1127            mov     r0,b
04B3 F9        1128            mov     r1,a
04B4 E581      1129            mov     a,sp
04B6 24FC      1130            add     a,#0xfc
04B8 F581      1131            mov     sp,a
04BA D005      1132            pop     ar5
04BC D004      1133            pop     ar4
04BE D003      1134            pop     ar3
04C0 D002      1135            pop     ar2
04C2 C006      1136            push    ar6
04C4 C007      1137            push    ar7
04C6 C000      1138            push    ar0
04C8 C001      1139            push    ar1
04CA 8A82      1140            mov     dpl,r2
04CC 8B83      1141            mov     dph,r3
04CE 8CF0      1142            mov     b,r4
04D0 ED        1143            mov     a,r5
04D1 120100    1144            lcall   ___fsadd
04D4 AA82      1145            mov     r2,dpl
04D6 AB83      1146            mov     r3,dph
04D8 ACF0      1147            mov     r4,b
04DA FD        1148            mov     r5,a
04DB E581      1149            mov     a,sp
04DD 24FC      1150            add     a,#0xfc
04DF F581      1151            mov     sp,a
04E1 8A82      1152            mov     dpl,r2
04E3 8B83      1153            mov     dph,r3
04E5 8CF0      1154            mov     b,r4
04E7 ED        1155            mov     a,r5
04E8 120100    1156            lcall   ___fs2sint
04EB AA82      1157            mov     r2,dpl
04ED AB83      1158            mov     r3,dph
04EF           1159   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:226: if(output > 128) output = 128;
04EF C3        1160            clr     c
04F0 7480      1161            mov     a,#0x80
04F2 9A        1162            subb    a,r2
04F3 E4        1163            clr     a
04F4 6480      1164            xrl     a,#0x80
04F6 8BF0      1165            mov     b,r3
04F8 63F080    1166            xrl     b,#0x80
04FB 95F0      1167            subb    a,b
04FD 5001      1168            jnc     L006006?
04FF 7A80      1169            mov     r2,#0x80
0501 7B00      1170            mov     r3,#0x00
0503 8001      1171            sjmp    L006007?
0505           1172   L006006?:
0505           1173   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:227: else if (output < -128) output = -127; //OVERFLOWS AT 255
0505 C3        1174            clr     c
0506 EA        1175            mov     a,r2
0507 9480      1176            subb    a,#0x80
0509 EB        1177            mov     a,r3
050A 6480      1178            xrl     a,#0x80
050C 947F      1179            subb    a,#0x7f
050E 5001      1180            jnc     L006007?
0510 7A81      1181            mov     r2,#0x81
0512 7BFF      1182            mov     r3,#0xFF
0514           1183   L006007?:
0514           1184   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:228: output = 128 - output;
0514 7480      1185            mov     a,#0x80
0516 C3        1186            clr     c
0517 9A        1187            subb    a,r2
0518 F518      1188            mov     _pwm_temp,a
051A E4        1189            clr     a
051B 9B        1190            subb    a,r3
051C F519      1191            mov     (_pwm_temp + 1),a
051E           1192   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:232: prevError = error;
051E 85B818    1193            mov     _prevError,_PIDcalculation_error_1_83
0521 85B919    1194            mov     (_prevError + 1),(_PIDcalculation_error_1_83 + 1)
0524           1195   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:235: return pwm_temp;
0524 851882    1196            mov     dpl,_pwm_temp
0527 851983    1197            mov     dph,(_pwm_temp + 1)
052A 22        1198            ret
052B           1199   ;------------------------------------------------------------
052B           1200   ;Allocation info for local variables in function 'fivePointMovingAvg'
052B           1201   ;------------------------------------------------------------
052B           1202   ;prevError                 Allocated with name '_fivePointMovingAvg_prevError_1_85'
052B           1203   ;i                         Allocated to registers r6 r7 
052B           1204   ;avgError                  Allocated to registers 
052B           1205   ;sum                       Allocated to registers r4 r5 
052B           1206   ;------------------------------------------------------------
052B           1207   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:238: int fivePointMovingAvg (int prevError){
052B           1208   ;        -----------------------------------------
052B           1209   ;         function fivePointMovingAvg
052B           1210   ;        -----------------------------------------
052B           1211   _fivePointMovingAvg:
052B 858268    1212            mov     _fivePointMovingAvg_prevError_1_85,dpl
052E 858369    1213            mov     (_fivePointMovingAvg_prevError_1_85 + 1),dph
0531           1214   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:240: int avgError, sum = 0;
0531 7C00      1215            mov     r4,#0x00
0533 7D00      1216            mov     r5,#0x00
0535           1217   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:243: for(i=5; i>0; i--)
0535 7E05      1218            mov     r6,#0x05
0537 7F00      1219            mov     r7,#0x00
0539           1220   L007001?:
0539 C3        1221            clr     c
053A E4        1222            clr     a
053B 9E        1223            subb    a,r6
053C E4        1224            clr     a
053D 6480      1225            xrl     a,#0x80
053F 8FF0      1226            mov     b,r7
0541 63F080    1227            xrl     b,#0x80
0544 95F0      1228            subb    a,b
0546 5001      1229            jnc     L007004?
0548           1230   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:244: past5[i] = past5[i-1];
0548 8E02      1231            mov     ar2,r6
054A EF        1232            mov     a,r7
054B CA        1233            xch     a,r2
054C 25E0      1234            add     a,acc
054E CA        1235            xch     a,r2
054F 33        1236            rlc     a
0550 EA        1237            mov     a,r2
0551 24D8      1238            add     a,#_past5
0553 F8        1239            mov     r0,a
0554 8E02      1240            mov     ar2,r6
0556 1A        1241            dec     r2
0557 EA        1242            mov     a,r2
0558 2A        1243            add     a,r2
0559 24D8      1244            add     a,#_past5
055B F9        1245            mov     r1,a
055C 8702      1246            mov     ar2,@r1
055E 09        1247            inc     r1
055F 8703      1248            mov     ar3,@r1
0561 19        1249            dec     r1
0562 A602      1250            mov     @r0,ar2
0564 08        1251            inc     r0
0565 A603      1252            mov     @r0,ar3
0567 18        1253            dec     r0
0568           1254   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:243: for(i=5; i>0; i--)
0568 1E        1255            dec     r6
0569 BEFF28    1256            cjne    r6,#0xff,L007018?
056C 1F        1257            dec     r7
056D           1258   L007018?:
056D 8001      1259            sjmp    L007001?
056F           1260   L007004?:
056F           1261   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:245: past5[0] = prevError;
056F 8568D8    1262            mov     _past5,_fivePointMovingAvg_prevError_1_85
0572 8569D9    1263            mov     (_past5 + 1),(_fivePointMovingAvg_prevError_1_85 + 1)
0575           1264   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:248: for(i=6; i>0; i--)
0575 7A06      1265            mov     r2,#0x06
0577 7B00      1266            mov     r3,#0x00
0579           1267   L007005?:
0579 C3        1268            clr     c
057A E4        1269            clr     a
057B 9A        1270            subb    a,r2
057C E4        1271            clr     a
057D 6480      1272            xrl     a,#0x80
057F 8BF0      1273            mov     b,r3
0581 63F080    1274            xrl     b,#0x80
0584 95F0      1275            subb    a,b
0586 5001      1276            jnc     L007008?
0588           1277   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:249: sum += past5[i];
0588 8A06      1278            mov     ar6,r2
058A EB        1279            mov     a,r3
058B CE        1280            xch     a,r6
058C 25E0      1281            add     a,acc
058E CE        1282            xch     a,r6
058F 33        1283            rlc     a
0590 EE        1284            mov     a,r6
0591 24D8      1285            add     a,#_past5
0593 F8        1286            mov     r0,a
0594 8606      1287            mov     ar6,@r0
0596 08        1288            inc     r0
0597 8607      1289            mov     ar7,@r0
0599 18        1290            dec     r0
059A EE        1291            mov     a,r6
059B 2C        1292            add     a,r4
059C FC        1293            mov     r4,a
059D EF        1294            mov     a,r7
059E 3D        1295            addc    a,r5
059F FD        1296            mov     r5,a
05A0           1297   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:248: for(i=6; i>0; i--)
05A0 1A        1298            dec     r2
05A1 BAFFE8    1299            cjne    r2,#0xff,L007020?
05A4 1B        1300            dec     r3
05A5           1301   L007020?:
05A5 8001      1302            sjmp    L007005?
05A7           1303   L007008?:
05A7           1304   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:250: avgError = sum / 5;
05A7 750005    1305            mov     __divsint_PARM_2,#0x05
05AA E4        1306            clr     a
05AB F501      1307            mov     (__divsint_PARM_2 + 1),a
05AD 8C82      1308            mov     dpl,r4
05AF 8D83      1309            mov     dph,r5
05B1           1310   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:252: return avgError;
05B1 020100    1311            ljmp    __divsint
05B4           1312   ;------------------------------------------------------------
05B4           1313   ;Allocation info for local variables in function 'decode'
05B4           1314   ;------------------------------------------------------------
05B4           1315   ;OE                        Allocated to registers r2 r3 
05B4           1316   ;result                    Allocated to registers 
05B4           1317   ;mult                      Allocated to registers 
05B4           1318   ;temp                      Allocated to registers r2 r3 
05B4           1319   ;Result_lo                 Allocated to registers r7 r0 
05B4           1320   ;Result_2nd                Allocated to registers 
05B4           1321   ;Result_3rd                Allocated to registers r5 r6 
05B4           1322   ;Result_hi                 Allocated to registers 
05B4           1323   ;------------------------------------------------------------
05B4           1324   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:279: unsigned int decode (int OE)
05B4           1325   ;        -----------------------------------------
05B4           1326   ;         function decode
05B4           1327   ;        -----------------------------------------
05B4           1328   _decode:
05B4 AA82      1329            mov     r2,dpl
05B6 AB83      1330            mov     r3,dph
05B8           1331   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:289: if(OE==1)P3_6 = 1; //Disable OE
05B8 E4        1332            clr     a
05B9 BA01B8    1333            cjne    r2,#0x01,L008024?
05BC BB00B8    1334            cjne    r3,#0x00,L008024?
05BF 04        1335            inc     a
05C0           1336   L008024?:
05C0 FC        1337            mov     r4,a
05C1 6001      1338            jz      L008004?
05C3 D2B6      1339            setb    _P3_6
05C5 8001      1340            sjmp    L008005?
05C7           1341   L008004?:
05C7           1342   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:290: else if(OE==2)P3_7 = 1; //Disable OE
05C7 BA0238    1343            cjne    r2,#0x02,L008005?
05CA BB0038    1344            cjne    r3,#0x00,L008005?
05CD D2B7      1345            setb    _P3_7
05CF           1346   L008005?:
05CF           1347   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:292: P4_3 = 0; //Sel1 TEST
05CF C2C3      1348            clr     _P4_3
05D1           1349   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:293: P4_4 = 1; //SEL2 = 1 (MSB)
05D1 D2C4      1350            setb    _P4_4
05D3           1351   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:295: if(OE==1)P3_6 = 0; //Enable OE
05D3 EC        1352            mov     a,r4
05D4 6001      1353            jz      L008009?
05D6 C2B6      1354            clr     _P3_6
05D8 8001      1355            sjmp    L008010?
05DA           1356   L008009?:
05DA           1357   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:296: else if(OE==2)P3_7 = 0; //Enable OE  
05DA BA02B8    1358            cjne    r2,#0x02,L008010?
05DD BB00B8    1359            cjne    r3,#0x00,L008010?
05E0 C2B7      1360            clr     _P3_7
05E2           1361   L008010?:
05E2           1362   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:298: Result_hi = readBits(OE); // Get MSB
05E2 8A82      1363            mov     dpl,r2
05E4 8B83      1364            mov     dph,r3
05E6 C002      1365            push    ar2
05E8 C003      1366            push    ar3
05EA C004      1367            push    ar4
05EC 120100    1368            lcall   _readBits
05EF D004      1369            pop     ar4
05F1 D003      1370            pop     ar3
05F3 D002      1371            pop     ar2
05F5           1372   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:299: P4_3 = 1; //SEL1 = 1 (2nd Byte)
05F5 D2C3      1373            setb    _P4_3
05F7           1374   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:300: P4_4 = 1; //SEL2 = 1 (2nd Byte)
05F7 D2C4      1375            setb    _P4_4
05F9           1376   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:301: Result_2nd  = readBits(OE);
05F9 8A82      1377            mov     dpl,r2
05FB 8B83      1378            mov     dph,r3
05FD C002      1379            push    ar2
05FF C003      1380            push    ar3
0601 C004      1381            push    ar4
0603 120100    1382            lcall   _readBits
0606 D004      1383            pop     ar4
0608 D003      1384            pop     ar3
060A D002      1385            pop     ar2
060C           1386   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:302: P4_3 = 0; //SEL1 = 0 (3rd Byte)
060C C2C3      1387            clr     _P4_3
060E           1388   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:303: P4_4 = 0; //SEL2 = 0 (3rd Byte)
060E C2C4      1389            clr     _P4_4
0610           1390   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:304: Result_3rd = readBits(OE);
0610 8A82      1391            mov     dpl,r2
0612 8B83      1392            mov     dph,r3
0614 C002      1393            push    ar2
0616 C003      1394            push    ar3
0618 C004      1395            push    ar4
061A 120100    1396            lcall   _readBits
061D AD82      1397            mov     r5,dpl
061F AE83      1398            mov     r6,dph
0621 D004      1399            pop     ar4
0623 D003      1400            pop     ar3
0625 D002      1401            pop     ar2
0627           1402   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:305: P4_3 = 1; //SEL1 = 1 (LSB)
0627 D2C3      1403            setb    _P4_3
0629           1404   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:306: P4_4 = 0; //SEL2 = 0 (LSB)
0629 C2C4      1405            clr     _P4_4
062B           1406   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:307: Result_lo = readBits(OE); // Get LSB
062B 8A82      1407            mov     dpl,r2
062D 8B83      1408            mov     dph,r3
062F C002      1409            push    ar2
0631 C003      1410            push    ar3
0633 C004      1411            push    ar4
0635 C005      1412            push    ar5
0637 C006      1413            push    ar6
0639 120100    1414            lcall   _readBits
063C AF82      1415            mov     r7,dpl
063E A883      1416            mov     r0,dph
0640 D006      1417            pop     ar6
0642 D005      1418            pop     ar5
0644 D004      1419            pop     ar4
0646 D003      1420            pop     ar3
0648 D002      1421            pop     ar2
064A           1422   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:309: if(OE==1)P3_6 = 1; //Disable OE
064A EC        1423            mov     a,r4
064B 6001      1424            jz      L008014?
064D D2B6      1425            setb    _P3_6
064F 8001      1426            sjmp    L008015?
0651           1427   L008014?:
0651           1428   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:310: else if(OE==2)P3_7 = 1; //Disable OE
0651 BA0240    1429            cjne    r2,#0x02,L008015?
0654 BB0040    1430            cjne    r3,#0x00,L008015?
0657 D2B7      1431            setb    _P3_7
0659           1432   L008015?:
0659           1433   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:317: temp = Result_3rd*mult; //Assign 3rd Byte
0659 750000    1434            mov     __mulint_PARM_2,#0x00
065C 750101    1435            mov     (__mulint_PARM_2 + 1),#0x01
065F 8D82      1436            mov     dpl,r5
0661 8E83      1437            mov     dph,r6
0663 C007      1438            push    ar7
0665 C000      1439            push    ar0
0667 120100    1440            lcall   __mulint
066A AA82      1441            mov     r2,dpl
066C AB83      1442            mov     r3,dph
066E D000      1443            pop     ar0
0670 D007      1444            pop     ar7
0672           1445   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:318: result = result + temp;
0672 EA        1446            mov     a,r2
0673 2F        1447            add     a,r7
0674 F582      1448            mov     dpl,a
0676 EB        1449            mov     a,r3
0677 38        1450            addc    a,r0
0678 F583      1451            mov     dph,a
067A           1452   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:328: return result;
067A 22        1453            ret
067B           1454   ;------------------------------------------------------------
067B           1455   ;Allocation info for local variables in function 'readBits'
067B           1456   ;------------------------------------------------------------
067B           1457   ;select                    Allocated to registers r2 r3 
067B           1458   ;num                       Allocated to registers r4 r5 
067B           1459   ;------------------------------------------------------------
067B           1460   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:332: unsigned int readBits(int select)
067B           1461   ;        -----------------------------------------
067B           1462   ;         function readBits
067B           1463   ;        -----------------------------------------
067B           1464   _readBits:
067B AA82      1465            mov     r2,dpl
067D AB83      1466            mov     r3,dph
067F           1467   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:334: unsigned int num = 0;
067F 7C00      1468            mov     r4,#0x00
0681 7D00      1469            mov     r5,#0x00
0683           1470   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:336: if(select == 1){
0683 BA0100    1471            cjne    r2,#0x01,L009010?
0686 BB0000    1472            cjne    r3,#0x00,L009010?
0689 8001      1473            sjmp    L009011?
068B           1474   L009010?:
068B 020100    1475            ljmp    L009004?
068E           1476   L009011?:
068E           1477   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:337: num = P2_7*128 + P2_6*64 + P2_5*32 + P2_4*16 + P2_3*8 + P2_2*4 + P2_1*2 + P2_0*1;
068E A2A7      1478            mov     c,_P2_7
0690 E4        1479            clr     a
0691 33        1480            rlc     a
0692 FE        1481            mov     r6,a
0693 E4        1482            clr     a
0694 5401      1483            anl     a,#0x01
0696 A2E0      1484            mov     c,acc.0
0698 CE        1485            xch     a,r6
0699 13        1486            rrc     a
069A CE        1487            xch     a,r6
069B 13        1488            rrc     a
069C CE        1489            xch     a,r6
069D FF        1490            mov     r7,a
069E A2A6      1491            mov     c,_P2_6
06A0 E4        1492            clr     a
06A1 33        1493            rlc     a
06A2 F8        1494            mov     r0,a
06A3 E4        1495            clr     a
06A4 5403      1496            anl     a,#0x03
06A6 A2E0      1497            mov     c,acc.0
06A8 C8        1498            xch     a,r0
06A9 13        1499            rrc     a
06AA C8        1500            xch     a,r0
06AB 13        1501            rrc     a
06AC A2E0      1502            mov     c,acc.0
06AE C8        1503            xch     a,r0
06AF 13        1504            rrc     a
06B0 C8        1505            xch     a,r0
06B1 13        1506            rrc     a
06B2 C8        1507            xch     a,r0
06B3 F9        1508            mov     r1,a
06B4 E8        1509            mov     a,r0
06B5 2E        1510            add     a,r6
06B6 FE        1511            mov     r6,a
06B7 E9        1512            mov     a,r1
06B8 3F        1513            addc    a,r7
06B9 FF        1514            mov     r7,a
06BA A2A5      1515            mov     c,_P2_5
06BC E4        1516            clr     a
06BD 33        1517            rlc     a
06BE F8        1518            mov     r0,a
06BF E4        1519            clr     a
06C0 C4        1520            swap    a
06C1 23        1521            rl      a
06C2 54E0      1522            anl     a,#0xe0
06C4 C8        1523            xch     a,r0
06C5 C4        1524            swap    a
06C6 23        1525            rl      a
06C7 C8        1526            xch     a,r0
06C8 68        1527            xrl     a,r0
06C9 C8        1528            xch     a,r0
06CA 54E0      1529            anl     a,#0xe0
06CC C8        1530            xch     a,r0
06CD 68        1531            xrl     a,r0
06CE F9        1532            mov     r1,a
06CF E8        1533            mov     a,r0
06D0 2E        1534            add     a,r6
06D1 FE        1535            mov     r6,a
06D2 E9        1536            mov     a,r1
06D3 3F        1537            addc    a,r7
06D4 FF        1538            mov     r7,a
06D5 A2A4      1539            mov     c,_P2_4
06D7 E4        1540            clr     a
06D8 33        1541            rlc     a
06D9 F8        1542            mov     r0,a
06DA E4        1543            clr     a
06DB C4        1544            swap    a
06DC 54F0      1545            anl     a,#0xf0
06DE C8        1546            xch     a,r0
06DF C4        1547            swap    a
06E0 C8        1548            xch     a,r0
06E1 68        1549            xrl     a,r0
06E2 C8        1550            xch     a,r0
06E3 54F0      1551            anl     a,#0xf0
06E5 C8        1552            xch     a,r0
06E6 68        1553            xrl     a,r0
06E7 F9        1554            mov     r1,a
06E8 E8        1555            mov     a,r0
06E9 2E        1556            add     a,r6
06EA FE        1557            mov     r6,a
06EB E9        1558            mov     a,r1
06EC 3F        1559            addc    a,r7
06ED FF        1560            mov     r7,a
06EE A2A3      1561            mov     c,_P2_3
06F0 E4        1562            clr     a
06F1 33        1563            rlc     a
06F2 F8        1564            mov     r0,a
06F3 E4        1565            clr     a
06F4 C4        1566            swap    a
06F5 03        1567            rr      a
06F6 54F8      1568            anl     a,#0xf8
06F8 C8        1569            xch     a,r0
06F9 C4        1570            swap    a
06FA 03        1571            rr      a
06FB C8        1572            xch     a,r0
06FC 68        1573            xrl     a,r0
06FD C8        1574            xch     a,r0
06FE 54F8      1575            anl     a,#0xf8
0700 C8        1576            xch     a,r0
0701 68        1577            xrl     a,r0
0702 F9        1578            mov     r1,a
0703 E8        1579            mov     a,r0
0704 2E        1580            add     a,r6
0705 FE        1581            mov     r6,a
0706 E9        1582            mov     a,r1
0707 3F        1583            addc    a,r7
0708 FF        1584            mov     r7,a
0709 A2A2      1585            mov     c,_P2_2
070B E4        1586            clr     a
070C 33        1587            rlc     a
070D F8        1588            mov     r0,a
070E E4        1589            clr     a
070F C8        1590            xch     a,r0
0710 25E0      1591            add     a,acc
0712 C8        1592            xch     a,r0
0713 33        1593            rlc     a
0714 C8        1594            xch     a,r0
0715 25E0      1595            add     a,acc
0717 C8        1596            xch     a,r0
0718 33        1597            rlc     a
0719 F9        1598            mov     r1,a
071A E8        1599            mov     a,r0
071B 2E        1600            add     a,r6
071C FE        1601            mov     r6,a
071D E9        1602            mov     a,r1
071E 3F        1603            addc    a,r7
071F FF        1604            mov     r7,a
0720 A2A1      1605            mov     c,_P2_1
0722 E4        1606            clr     a
0723 33        1607            rlc     a
0724 F8        1608            mov     r0,a
0725 E4        1609            clr     a
0726 C8        1610            xch     a,r0
0727 25E0      1611            add     a,acc
0729 C8        1612            xch     a,r0
072A 33        1613            rlc     a
072B F9        1614            mov     r1,a
072C E8        1615            mov     a,r0
072D 2E        1616            add     a,r6
072E FE        1617            mov     r6,a
072F E9        1618            mov     a,r1
0730 3F        1619            addc    a,r7
0731 FF        1620            mov     r7,a
0732 A2A0      1621            mov     c,_P2_0
0734 E4        1622            clr     a
0735 33        1623            rlc     a
0736 F8        1624            mov     r0,a
0737 7900      1625            mov     r1,#0x00
0739 E8        1626            mov     a,r0
073A 2E        1627            add     a,r6
073B FC        1628            mov     r4,a
073C E9        1629            mov     a,r1
073D 3F        1630            addc    a,r7
073E FD        1631            mov     r5,a
073F 020100    1632            ljmp    L009005?
0742           1633   L009004?:
0742           1634   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:340: else if(select == 2){
0742 BA0200    1635            cjne    r2,#0x02,L009012?
0745 BB0000    1636            cjne    r3,#0x00,L009012?
0748 8001      1637            sjmp    L009013?
074A           1638   L009012?:
074A 020100    1639            ljmp    L009005?
074D           1640   L009013?:
074D           1641   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:341: num = P0_7*128 + P0_6*64 + P0_5*32 + P0_4*16 + P0_3*8 + P0_2*4 + P0_1*2 + P0_0*1;
074D A287      1642            mov     c,_P0_7
074F E4        1643            clr     a
0750 33        1644            rlc     a
0751 FA        1645            mov     r2,a
0752 E4        1646            clr     a
0753 5401      1647            anl     a,#0x01
0755 A2E0      1648            mov     c,acc.0
0757 CA        1649            xch     a,r2
0758 13        1650            rrc     a
0759 CA        1651            xch     a,r2
075A 13        1652            rrc     a
075B CA        1653            xch     a,r2
075C FB        1654            mov     r3,a
075D A286      1655            mov     c,_P0_6
075F E4        1656            clr     a
0760 33        1657            rlc     a
0761 FE        1658            mov     r6,a
0762 E4        1659            clr     a
0763 5403      1660            anl     a,#0x03
0765 A2E0      1661            mov     c,acc.0
0767 CE        1662            xch     a,r6
0768 13        1663            rrc     a
0769 CE        1664            xch     a,r6
076A 13        1665            rrc     a
076B A2E0      1666            mov     c,acc.0
076D CE        1667            xch     a,r6
076E 13        1668            rrc     a
076F CE        1669            xch     a,r6
0770 13        1670            rrc     a
0771 CE        1671            xch     a,r6
0772 FF        1672            mov     r7,a
0773 EE        1673            mov     a,r6
0774 2A        1674            add     a,r2
0775 FA        1675            mov     r2,a
0776 EF        1676            mov     a,r7
0777 3B        1677            addc    a,r3
0778 FB        1678            mov     r3,a
0779 A285      1679            mov     c,_P0_5
077B E4        1680            clr     a
077C 33        1681            rlc     a
077D FE        1682            mov     r6,a
077E E4        1683            clr     a
077F C4        1684            swap    a
0780 23        1685            rl      a
0781 54E0      1686            anl     a,#0xe0
0783 CE        1687            xch     a,r6
0784 C4        1688            swap    a
0785 23        1689            rl      a
0786 CE        1690            xch     a,r6
0787 6E        1691            xrl     a,r6
0788 CE        1692            xch     a,r6
0789 54E0      1693            anl     a,#0xe0
078B CE        1694            xch     a,r6
078C 6E        1695            xrl     a,r6
078D FF        1696            mov     r7,a
078E EE        1697            mov     a,r6
078F 2A        1698            add     a,r2
0790 FA        1699            mov     r2,a
0791 EF        1700            mov     a,r7
0792 3B        1701            addc    a,r3
0793 FB        1702            mov     r3,a
0794 A284      1703            mov     c,_P0_4
0796 E4        1704            clr     a
0797 33        1705            rlc     a
0798 FE        1706            mov     r6,a
0799 E4        1707            clr     a
079A C4        1708            swap    a
079B 54F0      1709            anl     a,#0xf0
079D CE        1710            xch     a,r6
079E C4        1711            swap    a
079F CE        1712            xch     a,r6
07A0 6E        1713            xrl     a,r6
07A1 CE        1714            xch     a,r6
07A2 54F0      1715            anl     a,#0xf0
07A4 CE        1716            xch     a,r6
07A5 6E        1717            xrl     a,r6
07A6 FF        1718            mov     r7,a
07A7 EE        1719            mov     a,r6
07A8 2A        1720            add     a,r2
07A9 FA        1721            mov     r2,a
07AA EF        1722            mov     a,r7
07AB 3B        1723            addc    a,r3
07AC FB        1724            mov     r3,a
07AD A283      1725            mov     c,_P0_3
07AF E4        1726            clr     a
07B0 33        1727            rlc     a
07B1 FE        1728            mov     r6,a
07B2 E4        1729            clr     a
07B3 C4        1730            swap    a
07B4 03        1731            rr      a
07B5 54F8      1732            anl     a,#0xf8
07B7 CE        1733            xch     a,r6
07B8 C4        1734            swap    a
07B9 03        1735            rr      a
07BA CE        1736            xch     a,r6
07BB 6E        1737            xrl     a,r6
07BC CE        1738            xch     a,r6
07BD 54F8      1739            anl     a,#0xf8
07BF CE        1740            xch     a,r6
07C0 6E        1741            xrl     a,r6
07C1 FF        1742            mov     r7,a
07C2 EE        1743            mov     a,r6
07C3 2A        1744            add     a,r2
07C4 FA        1745            mov     r2,a
07C5 EF        1746            mov     a,r7
07C6 3B        1747            addc    a,r3
07C7 FB        1748            mov     r3,a
07C8 A282      1749            mov     c,_P0_2
07CA E4        1750            clr     a
07CB 33        1751            rlc     a
07CC FE        1752            mov     r6,a
07CD E4        1753            clr     a
07CE CE        1754            xch     a,r6
07CF 25E0      1755            add     a,acc
07D1 CE        1756            xch     a,r6
07D2 33        1757            rlc     a
07D3 CE        1758            xch     a,r6
07D4 25E0      1759            add     a,acc
07D6 CE        1760            xch     a,r6
07D7 33        1761            rlc     a
07D8 FF        1762            mov     r7,a
07D9 EE        1763            mov     a,r6
07DA 2A        1764            add     a,r2
07DB FA        1765            mov     r2,a
07DC EF        1766            mov     a,r7
07DD 3B        1767            addc    a,r3
07DE FB        1768            mov     r3,a
07DF A281      1769            mov     c,_P0_1
07E1 E4        1770            clr     a
07E2 33        1771            rlc     a
07E3 FE        1772            mov     r6,a
07E4 E4        1773            clr     a
07E5 CE        1774            xch     a,r6
07E6 25E0      1775            add     a,acc
07E8 CE        1776            xch     a,r6
07E9 33        1777            rlc     a
07EA FF        1778            mov     r7,a
07EB EE        1779            mov     a,r6
07EC 2A        1780            add     a,r2
07ED FA        1781            mov     r2,a
07EE EF        1782            mov     a,r7
07EF 3B        1783            addc    a,r3
07F0 FB        1784            mov     r3,a
07F1 A280      1785            mov     c,_P0_0
07F3 E4        1786            clr     a
07F4 33        1787            rlc     a
07F5 FE        1788            mov     r6,a
07F6 7F00      1789            mov     r7,#0x00
07F8 EE        1790            mov     a,r6
07F9 2A        1791            add     a,r2
07FA FC        1792            mov     r4,a
07FB EF        1793            mov     a,r7
07FC 3B        1794            addc    a,r3
07FD FD        1795            mov     r5,a
07FE           1796   L009005?:
07FE           1797   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:344: return num;
07FE 8C82      1798            mov     dpl,r4
0800 8D83      1799            mov     dph,r5
0802 22        1800            ret
0803           1801   ;------------------------------------------------------------
0803           1802   ;Allocation info for local variables in function 'waitms'
0803           1803   ;------------------------------------------------------------
0803           1804   ;------------------------------------------------------------
0803           1805   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:348: void waitms (void){
0803           1806   ;        -----------------------------------------
0803           1807   ;         function waitms
0803           1808   ;        -----------------------------------------
0803           1809   _waitms:
0803           1810   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:357: _endasm;
0803           1811            
0803 7A01      1812            mov R2, #1
0805           1813            L3:
0805 7901      1814            mov R1, #1
0807           1815            L2:
0807 78B8      1816            mov R0, #184
0809           1817            L1:
0809 D800      1818            djnz R0, L1 ; 2 machine cycles-> 0.5425347us*184=100us
080B D9C0      1819            djnz R1, L2 ; 100us*10=1ms
080D DA80      1820            djnz R2, L3 ; 1ms*25= 25ms
080F 22        1821            ret
0810 22        1822            ret
0811           1823   ;------------------------------------------------------------
0811           1824   ;Allocation info for local variables in function 'SPIWrite'
0811           1825   ;------------------------------------------------------------
0811           1826   ;value                     Allocated to registers r2 
0811           1827   ;------------------------------------------------------------
0811           1828   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:374: void SPIWrite(unsigned char value)
0811           1829   ;        -----------------------------------------
0811           1830   ;         function SPIWrite
0811           1831   ;        -----------------------------------------
0811           1832   _SPIWrite:
0811 AA82      1833            mov     r2,dpl
0813           1834   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:375: {    SPSTA&=(~SPIF); // Clear the SPIF flag in SPSTA
0813 53C47F    1835            anl     _SPSTA,#0x7F
0816           1836   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:376: SPDAT=value;
0816 8AC5      1837            mov     _SPDAT,r2
0818           1838   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:377: while((SPSTA & SPIF)!=SPIF); //Wait for transmission to end
0818           1839   L011001?:
0818 7480      1840            mov     a,#0x80
081A 55C4      1841            anl     a,_SPSTA
081C FA        1842            mov     r2,a
081D BA8040    1843            cjne    r2,#0x80,L011001?
0820 22        1844            ret
0821           1845   ;------------------------------------------------------------
0821           1846   ;Allocation info for local variables in function 'GetADC'
0821           1847   ;------------------------------------------------------------
0821           1848   ;channel                   Allocated to registers r2 
0821           1849   ;adc                       Allocated to registers r2 r3 
0821           1850   ;------------------------------------------------------------
0821           1851   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:381: unsigned int GetADC(unsigned char channel)
0821           1852   ;        -----------------------------------------
0821           1853   ;         function GetADC
0821           1854   ;        -----------------------------------------
0821           1855   _GetADC:
0821 AA82      1856            mov     r2,dpl
0823           1857   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:386: SPCON&=(~SPEN); // Disable SPI
0823 53C3BF    1858            anl     _SPCON,#0xBF
0826           1859   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:387: SPCON=MSTR|CPOL|CPHA|SPR1|SPR0|SSDIS;
0826 75C33F    1860            mov     _SPCON,#0x3F
0829           1861   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:388: SPCON|=SPEN; // Enable SPI
0829 43C340    1862            orl     _SPCON,#0x40
082C           1863   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:390: CE=0; // Activate the MCP3004 ADC.
082C C294      1864            clr     _P1_4
082E           1865   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:391: SPIWrite(channel|0x18);      // Send start bit, single/diff* bit, D2, D1, and D0 bits.
082E 7418      1866            mov     a,#0x18
0830 4A        1867            orl     a,r2
0831 F582      1868            mov     dpl,a
0833 120100    1869            lcall   _SPIWrite
0836           1870   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:392: for(adc=0; adc<10; adc++); // Wait for S/H to setup
0836 7A0A      1871            mov     r2,#0x0A
0838 7B00      1872            mov     r3,#0x00
083A           1873   L012003?:
083A 1A        1874            dec     r2
083B BAFFC0    1875            cjne    r2,#0xff,L012009?
083E 1B        1876            dec     r3
083F           1877   L012009?:
083F EA        1878            mov     a,r2
0840 4B        1879            orl     a,r3
0841 7001      1880            jnz     L012003?
0843           1881   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:393: SPIWrite(0x55); // Read bits 9 down to 4
0843 758255    1882            mov     dpl,#0x55
0846 120100    1883            lcall   _SPIWrite
0849           1884   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:394: adc=((SPDAT&0x3f)*0x100);                                    
0849 743F      1885            mov     a,#0x3F
084B 55C5      1886            anl     a,_SPDAT
084D FB        1887            mov     r3,a
084E 7A00      1888            mov     r2,#0x00
0850           1889   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:395: SPIWrite(0x55);// Read bits 3 down to 0
0850 758255    1890            mov     dpl,#0x55
0853 C002      1891            push    ar2
0855 C003      1892            push    ar3
0857 120100    1893            lcall   _SPIWrite
085A D003      1894            pop     ar3
085C D002      1895            pop     ar2
085E           1896   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:396: CE=1; // Deactivate the MCP3004 ADC.
085E D294      1897            setb    _P1_4
0860           1898   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:397: adc+=(SPDAT&0xf0); // SPDR contains the low part of the result. 
0860 74F0      1899            mov     a,#0xF0
0862 55C5      1900            anl     a,_SPDAT
0864 FC        1901            mov     r4,a
0865 7D00      1902            mov     r5,#0x00
0867 EC        1903            mov     a,r4
0868 2A        1904            add     a,r2
0869 FA        1905            mov     r2,a
086A ED        1906            mov     a,r5
086B 3B        1907            addc    a,r3
086C           1908   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:398: adc>>=4;
086C C4        1909            swap    a
086D CA        1910            xch     a,r2
086E C4        1911            swap    a
086F 540F      1912            anl     a,#0x0f
0871 6A        1913            xrl     a,r2
0872 CA        1914            xch     a,r2
0873 540F      1915            anl     a,#0x0f
0875 CA        1916            xch     a,r2
0876 6A        1917            xrl     a,r2
0877 CA        1918            xch     a,r2
0878           1919   ;        C:\Users\Pouria\Desktop\robot-arm\MK1_PID_interrupt.c:400: return adc;
0878 8A82      1920            mov     dpl,r2
087A F583      1921            mov     dph,a
087C 22        1922            ret
087D           1923            rseg R_CSEG
087D           1924   
0000           1925            rseg R_XINIT
0000           1926   
0000           1927            rseg R_CONST
0000           1928   __str_0:
0000 1B        1929            db 0x1B
0001 5B303B33  1930            db '[0;3%d;4%dm'
     25643B34
     25646D
000C 00        1931            db 0x00
000D           1932   __str_1:
000D 1B        1933            db 0x1B
000E 5B324A    1934            db '[2J'
0011 00        1935            db 0x00
0012           1936   __str_2:
0012 1B        1937            db 0x1B
0013 5B25643B  1938            db '[%d;%dH'
     256448
001A 00        1939            db 0x00
001B           1940   __str_3:
001B 4D6F746F  1941            db 'Motor Angle      :::'
     7220416E
     676C6520
     20202020
     203A3A3A
002F 00        1942            db 0x00
0030           1943   __str_4:
0030 0A        1944            db 0x0A
0031 4C696E20  1945            db 'Lin Motor Angle  :::'
     4D6F746F
     7220416E
     676C6520
     203A3A3A
0045 00        1946            db 0x00
0046           1947   __str_5:
0046 0A        1948            db 0x0A
0047 53657470  1949            db 'Setpoint Angle   ::: '
     6F696E74
     20416E67
     6C652020
     203A3A3A
     20
005C 00        1950            db 0x00
005D           1951   __str_6:
005D 0A        1952            db 0x0A
005E 4C696E65  1953            db 'Linear Position  ::: '
     61722050
     6F736974
     696F6E20
     203A3A3A
     20
0073 00        1954            db 0x00
0074           1955   __str_7:
0074 25692020  1956            db '%i     '
     202020
007B 00        1957            db 0x00
007C           1958   __str_8:
007C 25692020  1959            db '%i    '
     2020
0082 00        1960            db 0x00
0083           1961   __str_9:
0083 0A        1962            db 0x0A
0084 50574D20  1963            db 'PWM ::: %i    '
     3A3A3A20
     25692020
     2020
0092 00        1964            db 0x00
0093           1965   
002E           1966            CSEG
002E           1967   
002E           1968   end
